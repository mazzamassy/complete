{"version":3,"file":"9451.86ae39de2f6e33c528bb.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.module.scss?67d9","webpack://telegram-t/./src/components/main/premium/PremiumGiftModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.module.scss?c1d3","webpack://telegram-t/./src/components/main/premium/StarsGiftModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingPickerModal.module.scss?e51e","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/StarsGiftingPickerModal.module.scss?3156","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.module.scss?605d","webpack://telegram-t/./src/components/modals/stars/transaction/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionItem.module.scss?b947","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.module.scss?a215","webpack://telegram-t/./src/components/modals/stars/transaction/StarsTransactionModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo } = webPage;\n    const media = webPageVideo || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReport?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  handleSponsoredClick,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const countText = count && lang('Of', [item.mediaIndex! + 1, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n          : isChannel ? 'lng_mediaview_channel_photo'\n            : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText) parts.push(countText);\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = avatarOwner && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReport={canReport}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, undefined, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(\n      unique([\n        ...(currentUserId ? [currentUserId] : []),\n        ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n        ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n      ]),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport { useEffect, useSignal, useState } from '../lib/teact/teact';\n\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nlet resizeTimeout: number | undefined;\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isEnabled: boolean = true,\n  originalSize: Size,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(undefined);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartDrag, setElementPositionOnStartDrag] = useSignal({ x: 0, y: 0 });\n  const [getDragStartPoint, setDragStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartDrag = getElementPositionOnStartDrag();\n  const dragStartPoint = getDragStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      setElementCurrentPosition({ x: centeredPosition.x, y: centeredPosition.y });\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartDrag({ x: left, y: top });\n    setDragStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  const handleRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  useEffect(() => {\n    if (!isEnabled) {\n      stopDragging();\n    }\n  }, [isEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    const position = !wasElementShown ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    setElementCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    newSize.width = Math.min(visibleArea.width, Math.max(originalSize.width, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalSize.height, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - dragStartPoint.x;\n    const offsetY = pageY - dragStartPoint.y;\n\n    const newX = elementPositionOnStartDrag.x + offsetX;\n    const newY = elementPositionOnStartDrag.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleRelease,\n        onClick: handleRelease,\n        onDoubleClick: handleRelease,\n      });\n    }\n    return cleanup;\n  }, [handleDrag, handleStartDrag, isEnabled, dragHandleElement]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  if (!isInitiated || !elementCurrentSize || !elementCurrentPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${elementCurrentPosition.x}px;`,\n    `top: ${elementCurrentPosition.y}px;`,\n    `width: ${elementCurrentSize.width}px;`,\n    `height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../global/types';\n\nimport { selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState();\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = activeTabBot?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = webApps?.activeWebApp || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp } from '../../../../global/types';\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) closeWebApp({ webApp, skipClosingConfirmation: true });\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        // showNotification({\n        //   message: 'Clipboard access is not supported in this client yet',\n        // });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, onLoad, windowSize.isResizing, ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loading-spinner\":\"ix5_w9MK\",\"loadingSpinner\":\"ix5_w9MK\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState, WebApp } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  isDragging?: boolean;\n  frameSize?: { width: number; height: number };\n  isMultiTabSupported? : boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isMaximizedState: boolean;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isDragging,\n  isMaximizedState,\n  frameSize,\n  isMultiTabSupported,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const activeWebApp = modal?.activeWebApp;\n  const {\n    url, buttonText, headerColor, serverHeaderColorKey, serverHeaderColor,\n  } = webApp || {};\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webApp) return;\n    const updatedWebApp = {\n      ...webApp,\n      ...updatedPartialWebApp,\n    };\n    webApp = updatedWebApp;\n    updateWebApp({ webApp: updatedWebApp });\n  });\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    updateCurrentWebApp({ headerColor: themeParams.bg_color, backgroundColor: themeParams.bg_color });\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const calculateHeaderColor = useLastCallback(\n    (serverColorKey? : 'bg_color' | 'secondary_bg_color', serverColor? : string) => {\n      if (serverColorKey) {\n        const themeParams = extractCurrentThemeParams();\n        const key = serverColorKey;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        updateCurrentWebApp({ headerColor: color, serverHeaderColorKey: key });\n      }\n\n      if (serverColor) {\n        const color = validateHexColor(serverColor) ? serverColor : headerColor;\n        updateCurrentWebApp({ headerColor: color, serverHeaderColor: serverColor });\n      }\n    },\n  );\n\n  const updateHeaderColor = useLastCallback(\n    () => {\n      calculateHeaderColor(serverHeaderColorKey, serverHeaderColor);\n    },\n  );\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n    updateHeaderColor();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      updateCurrentWebApp({ backgroundColor: color });\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      calculateHeaderColor(eventData.color_key, eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const prevMainButtonColor = usePreviousDeprecated(mainButton?.color, true);\n  const prevMainButtonTextColor = usePreviousDeprecated(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePreviousDeprecated(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePreviousDeprecated(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  const frameWidth = frameSize?.width || 0;\n  let frameHeight = frameSize?.height || 0;\n  if (shouldDecreaseWebFrameSize) { frameHeight -= 3.5 * REM; }\n  const frameStyle = buildStyle(\n    `left: ${0}px;`,\n    `top: ${0}px;`,\n    `width: ${frameWidth}px;`,\n    `height: ${frameHeight}px;`,\n    isDragging ? 'pointer-events: none;' : '',\n  );\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isMaximizedState && <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameSize ? frameStyle : undefined}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {isMaximizedState && (\n        <Button\n          className={buildClassName(\n            styles.mainButton,\n            shouldShowMainButton && styles.visible,\n            shouldHideButton && styles.hidden,\n          )}\n          style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n          disabled={!mainButtonCurrentIsActive}\n          onClick={handleMainButtonClick}\n        >\n          {mainButtonCurrentText}\n          {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n        </Button>\n      ) }\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId: activeBotId } = modal?.activeWebApp || {};\n    const isMaximizedState = modal?.modalState === 'maximized';\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n      isMaximizedState,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"tabs\":\"X18WbDa5\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState, WebApp } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n  } = getActions();\n\n  const maximizedStateSize = useMemo(() => {\n    return { width: 420, height: 730 };\n  }, []);\n  const minimizedStateSize = useMemo(() => {\n    return { width: 300, height: 40 };\n  }, []);\n  const [getFrameSize, setFrameSize] = useSignal(\n    { width: maximizedStateSize.width, height: maximizedStateSize.height - minimizedStateSize.height },\n  );\n\n  function getSize() {\n    return modal?.modalState === 'maximized' ? maximizedStateSize : minimizedStateSize;\n  }\n\n  const {\n    openedWebApps, activeWebApp, openedOrderedKeys, sessionKeys,\n  } = modal || {};\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement));\n  }, [supportMultiTabMode, headerElement, containerElement]);\n\n  const {\n    isDragging,\n    style: draggableStyle,\n    size,\n  } = useDraggable(ref, headerRef, isDraggingEnabled, getSize());\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n  useEffect(() => {\n    if (currentHeight === minimizedStateSize.height && currentWidth === minimizedStateSize.width) return;\n    if (isMaximizedState) {\n      const height = currentHeight - minimizedStateSize.height;\n      setFrameSize({ width: currentWidth, height });\n    }\n  }, [currentWidth, currentHeight, isMaximizedState, minimizedStateSize, setFrameSize]);\n\n  const lang = useOldLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      updateWebApp({\n        webApp: {\n          ...activeWebApp!,\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {lang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={lang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || !isMaximizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        {/* <Button\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n        >\n          <Icon className={styles.icon} name=\"add\" />\n        </Button>\n        */}\n\n        <Button\n          className={buildClassName(\n            styles.windowStateButton,\n            'no-drag',\n          )}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          onClick={handleCollapseClick}\n        >\n          <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n        </Button>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        !isMaximizedState && styles.minimized,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isDragging={isDragging}\n          frameSize={supportMultiTabMode ? getFrameSize() : undefined}\n          isMultiTabSupported={supportMultiTabMode}\n        />\n      ))}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId: activeBotId } = modal?.activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"GB3KpHga\",\"root\":\"bv742cLK\",\"transition\":\"M6awemqC\",\"content\":\"ahnxTv9t\",\"main\":\"DC9KsF8l\",\"giftSection\":\"OK5knwl3\",\"section\":\"U4wtCtMj\",\"header\":\"BFRxuPRK\",\"starHeaderText\":\"pOrYpnEf\",\"hiddenHeader\":\"x0wO46Uz\",\"closeButton\":\"lF9a9DcG\",\"avatars\":\"yUYDzqjs\",\"center\":\"ikfz9iTG\",\"description\":\"zoIZUqey\",\"premiumFeatures\":\"LzTgfZVa\",\"boostIcon\":\"jrg2ik9Z\",\"optionBottom\":\"s0ze_M5B\",\"secondaryInfo\":\"ML7Glpia\",\"footer\":\"MQ2XTHHM\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumGiftModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst PremiumGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closePremiumGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return oldLang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(oldLang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = oldLang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(oldLang('GiftPremiumWillReceiveBoostsPlural',\n      selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closePremiumGiftModal}\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      className={buildClassName(styles.modalDialog, styles.root)}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.giftSection}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <div className={styles.footer}>\n          <Button withPremiumGradient isShiny disabled={!selectedGift} onClick={handleSubmit}>\n            {oldLang(\n              'GiftSubscriptionFor', selectedGift\n              && formatCurrency(selectedGift!.amount, selectedGift.currency, oldLang.code),\n            )}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(PremiumGiftModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) {\n      return [undefined, false];\n    }\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, oldLang.code)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"uH8fqafl\",\"root\":\"aj6xpTC3\",\"main\":\"Iqf5K4mR\",\"headerInfo\":\"IOY_ESbV\",\"logo\":\"Pl_aaBw0\",\"logoBackground\":\"D5l7UeFq\",\"description\":\"ecZztcn2\",\"section\":\"t18TOwVL\",\"header\":\"eRV8zao3\",\"starHeaderText\":\"TTmBv6nH\",\"hiddenHeader\":\"keGf2mX9\",\"closeButton\":\"tlkzyZXX\",\"avatar\":\"P0oMhbon\",\"center\":\"Ri1FZd1z\",\"secondaryInfo\":\"TWNeq00k\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiStarTopupOption, ApiUser,\n} from '../../../api/types';\n\nimport { getSenderTitle } from '../../../global/helpers';\nimport {\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport SafeLink from '../../common/SafeLink';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './StarsGiftModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  starsGiftOptions?: ApiStarTopupOption[] | undefined;\n  forUserId?: string;\n  user?: ApiUser;\n};\n\nconst StarsGiftModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  starsGiftOptions,\n  forUserId,\n  user,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    closeStarsGiftModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedOption, setSelectedOption] = useState<ApiStarTopupOption | undefined>();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n    }\n  }, [isOpen]);\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    setSelectedOption(option);\n    if (user) {\n      openInvoice({\n        type: 'starsgift',\n        userId: forUserId!,\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    } else {\n      openInvoice({\n        type: 'stars',\n        stars: option.stars,\n        currency: option.currency,\n        amount: option.amount,\n      });\n    }\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClose = useLastCallback(() => {\n    closeStarsGiftModal();\n  });\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return user ? renderText(oldLang('Notification.StarsGift.SentYou',\n        formatCurrencyAsString(selectedOption!.amount, selectedOption!.currency, oldLang.code)), ['simple_markdown'])\n        : renderText(oldLang('StarsAcquiredInfo', selectedOption?.stars), ['simple_markdown']);\n    }\n\n    return user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars');\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        options={starsGiftOptions}\n        onClick={handleClick}\n      />\n    );\n  }\n\n  const bottomText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  return (\n    <Modal\n      className={buildClassName(styles.modalDialog, styles.root)}\n      dialogRef={dialogRef}\n      onClose={handleClose}\n      isOpen={isOpen}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsGiftModal()}\n          ariaLabel={oldLang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {user ? oldLang('GiftStarsTitle') : oldLang('Star.List.GetStars')}\n          </h2>\n        </div>\n        <div className={styles.headerInfo}>\n          {user ? (\n            <>\n              <Avatar\n                size=\"huge\"\n                peer={user}\n                className={styles.avatar}\n              />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          ) : (\n            <>\n              <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n              <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n            </>\n          )}\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={styles.description}>\n          {user ? renderText(\n            oldLang('ActionGiftStarsSubtitle', getSenderTitle(oldLang, user)), ['simple_markdown'],\n          ) : oldLang('Stars.Purchase.GetStarsInfo')}\n        </p>\n        <div className={styles.section}>\n          {renderStarOptionList()}\n          <div className={styles.secondaryInfo}>\n            {bottomText}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    starsGiftOptions, forUserId, isCompleted,\n  } = selectTabState(global).starsGiftModal || {};\n\n  const user = forUserId ? selectUser(getGlobal(), forUserId) : undefined;\n\n  return {\n    isCompleted,\n    starsGiftOptions,\n    forUserId,\n    user,\n  };\n})(StarsGiftModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasOnClickHandler = Boolean(onConfirm || modalProps.onClose);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasOnClickHandler && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  filterChatsByName, isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelIds ? filterChatsByName(lang, channelIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, lang, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  filterUsersByName,\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftsEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftsEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftsEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftsEnabled: global.appConfig?.isStarsGiftsEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './PremiumGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openPremiumGiftModal, showNotification } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openPremiumGiftModal({ forUserIds: selectedUserIds });\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: oldLang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      title={oldLang('GiftTelegramPremiumTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onConfirm={handleSendIdList}\n      onEnter={handleSendIdList}\n      withPremiumGradient\n      isConfirmDisabled={!selectedUserIds?.length}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        selectedIds={selectedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onSelectedIdsChange={handleSelectedUserIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yZCdNeOD\",\"main\":\"Nw_QD6HK\",\"filter\":\"Rn1VBujL\",\"title\":\"bawi8zUd\",\"buttons\":\"LWBSQW38\",\"picker\":\"xwRoLV_t\",\"avatars\":\"sRzPGePZ\",\"center\":\"hM3XfhyZ\",\"description\":\"utdqQEVD\",\"premiumFeatures\":\"ecueYpiv\",\"options\":\"krNSp7Q1\",\"button\":\"Phaog4hK\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterUsersByName, isDeletedUser, isUserBot,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\nimport styles from './StarsGiftingPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userIds?: string[];\n  activeListIds?: string[];\n  archivedListIds?: string[];\n}\n\nconst StarsGiftingPickerModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  userIds,\n}) => {\n  const { closeStarsGiftingModal, openStarsGiftModal } = getActions();\n\n  const oldLang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const combinedIds = [\n      ...(userIds || []),\n      ...(activeListIds || []),\n      ...(archivedListIds || []),\n    ];\n\n    const filteredContactIds = filterUsersByName(combinedIds, usersById, searchQuery);\n\n    return sortChatIds(unique(filteredContactIds).filter((id) => {\n      const user = usersById[id];\n\n      if (!user) {\n        return false;\n      }\n\n      return !user.isSupport\n        && !isUserBot(user) && !isDeletedUser(user)\n        && id !== currentUserId && id !== SERVICE_NOTIFICATIONS_USER_ID;\n    }));\n  }, [currentUserId, searchQuery, userIds, activeListIds, archivedListIds]);\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedId?: string) => {\n    if (newSelectedId?.length) {\n      openStarsGiftModal({ forUserId: newSelectedId });\n    }\n  });\n\n  return (\n    <PickerModal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closeStarsGiftingModal}\n      title={oldLang('GiftStarsTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={oldLang('Continue')}\n      onEnter={closeStarsGiftingModal}\n    >\n      <PeerPicker\n        className={styles.picker}\n        itemIds={displayedUserIds}\n        filterValue={searchQuery}\n        filterPlaceholder={oldLang('Search')}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        onSelectedIdChange={handleSelectedUserIdsChange}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    chats: {\n      listIds,\n    },\n    currentUserId,\n  } = global;\n\n  return {\n    userIds: global.contactList?.userIds,\n    activeListIds: listIds.active,\n    archivedListIds: listIds.archived,\n    currentUserId,\n  };\n})(StarsGiftingPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"s3k01dTm\",\"transition\":\"BNA0_b5j\",\"main\":\"Oadi16vt\",\"filter\":\"z84KbvhX\",\"title\":\"Jnsrau29\",\"buttons\":\"NnVyYB32\",\"picker\":\"cuI2eDIY\",\"avatars\":\"ILtw_aNL\",\"center\":\"eIfMzHv5\",\"description\":\"FlNJWZ5P\",\"premiumFeatures\":\"xIv0Yaur\",\"options\":\"eNJRXn6P\",\"button\":\"KDNKXBp5\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Lu0K9UZP\",\"selected\":\"UF8XKO4C\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"row\":\"_lSByw2M\",\"section\":\"I0BEPBF0\",\"logo\":\"jbiW0GE8\",\"logoBackground\":\"upEQnNLY\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiWebDocument } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerImageUrl?: string;\n  logoBackground?: string;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  headerAvatarWebPhoto?: ApiWebDocument;\n  noHeaderImage?: boolean;\n  isGift?: boolean;\n  isPrizeStars?: boolean;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerImageUrl,\n  logoBackground,\n  headerAvatarPeer,\n  headerAvatarWebPhoto,\n  noHeaderImage,\n  isGift,\n  isPrizeStars,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  const withAvatar = Boolean(headerAvatarPeer || headerAvatarWebPhoto);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {!isGift && !isPrizeStars && !noHeaderImage && (\n        withAvatar ? (\n          <Avatar peer={headerAvatarPeer} webPhoto={headerAvatarWebPhoto} size=\"jumbo\" className={styles.avatar} />\n        ) : (\n          <div className={styles.section}>\n            <img className={styles.logo} src={headerImageUrl} alt=\"\" draggable={false} />\n            {Boolean(logoBackground)\n              && <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />}\n          </div>\n        )\n      )}\n      {header}\n      <table className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <tr className={styles.row}>\n            <td className={buildClassName(styles.cell, styles.title)}>{label}</td>\n            <td className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </td>\n          </tr>\n        ))}\n      </table>\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      headerImageUrl={PremiumLogo}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"container\":\"mnhBs1uK\",\"section\":\"lYkNd_gb\",\"secondaryInfo\":\"fBublGG8\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"balance\":\"LitvQduT\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"starButton\":\"oOt4VBD2\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentAmount\":\"sd2jk3Hn\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance: number;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className }: OwnProps) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.balance, className)}>\n      <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n      <div className={styles.balanceBottom}>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {formatInteger(balance)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"jQkp75Gb\",\"preview\":\"OYGSN3PF\",\"count\":\"KX1yz2Jy\",\"thumb\":\"EvinKr5k\",\"noOutline\":\"KSAAsUDv\",\"itemCount1\":\"GxDajfX_\",\"itemCount2\":\"jXuZoxq8\",\"itemCount3\":\"TPn3XGHJ\",\"blurry\":\"hWZuxLS8\",\"full\":\"w56QPFhl\",\"fadeIn\":\"ds43W8Wq\"};","import React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport Icon from '../../../common/icons/Icon';\nimport MediaSpoiler from '../../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","import React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { CustomPeer } from '../../../../types';\n\nimport { getSenderTitle } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../../util/objects/customPeer';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Avatar from '../../../common/Avatar';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n};\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction }: OwnProps) => {\n  const { openStarsTransactionModal } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n  } = transaction;\n  const lang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n\n  const data = useMemo(() => {\n    let title = transaction.title || (transaction.extendedMedia ? lang('StarMediaPurchase') : undefined);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getSenderTitle(lang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = lang(customPeer.titleKey);\n      description = lang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = lang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = lang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = lang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [lang, peer, transaction]);\n\n  const handleClick = useLastCallback(() => {\n    openStarsTransactionModal({ transaction });\n  });\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      {extendedMedia ? <PaidMediaThumb media={extendedMedia} isTransactionPreview />\n        : <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />}\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        <p className={styles.description}>{data.description}</p>\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, lang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span className={buildClassName(styles.amount, stars < 0 ? styles.negative : styles.positive)}>\n          {formatStarsTransactionAmount(stars)}\n        </span>\n        <StarIcon className={styles.star} type=\"gold\" size=\"big\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aHAxv_Jg\",\"info\":\"oyYrn3II\",\"stars\":\"K5lc75ku\",\"amount\":\"QLQPuLAr\",\"star\":\"EFL6qa9z\",\"title\":\"e0pK8CJ_\",\"description\":\"xbERdDMQ\",\"date\":\"l6CwQ0Ev\",\"positive\":\"P_42_ZWR\",\"negative\":\"TGjnLJfH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport TransactionItem from './transaction/StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\nconst TRANSACTION_TABS: TabWithProperties[] = [\n  { title: 'StarsTransactionsAll' },\n  { title: 'StarsTransactionsIncoming' },\n  { title: 'StarsTransactionsOutgoing' },\n];\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  originPaymentBot?: ApiUser;\n  canBuyPremium?: boolean;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, originPaymentBot, canBuyPremium,\n}: OwnProps & StateProps) => {\n  const {\n    closeStarsBalanceModal, loadStarsTransactions, openStarsGiftingModal, openStarsGiftModal,\n  } = getActions();\n\n  const { balance, history } = starsBalanceState || {};\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const productStarsPrice = modal?.originPayment?.invoice?.amount;\n  const starsNeeded = productStarsPrice ? productStarsPrice - (balance || 0) : undefined;\n  const originBotName = originPaymentBot && getUserFullName(originPaymentBot);\n  const shouldShowTransactions = Boolean(history?.all?.transactions.length && !modal?.originPayment);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setSelectedTabIndex(0);\n    }\n  }, [isOpen]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = oldLang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, oldLang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleLoadMore = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  const openStarsGiftingModalHandler = useLastCallback(() => {\n    openStarsGiftingModal({});\n  });\n\n  const openStarsInfoModalHandler = useLastCallback(() => {\n    openStarsGiftModal({});\n  });\n\n  return (\n    <Modal className={styles.root} isOpen={isOpen} onClose={closeStarsBalanceModal}>\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance || 0} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {oldLang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? oldLang('StarsNeededTitle', starsNeeded) : oldLang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeeded ? oldLang('StarsNeededText', originBotName) : oldLang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          {canBuyPremium && (\n            <Button\n              className={styles.starButton}\n              onClick={openStarsInfoModalHandler}\n            >\n              {oldLang('Star.List.BuyMoreStars')}\n            </Button>\n          )}\n          {canBuyPremium && (\n            <Button\n              className={buildClassName(styles.starButton, 'settings-main-menu-star')}\n              color=\"translucent\"\n              onClick={openStarsGiftingModalHandler}\n            >\n              <StarIcon className=\"icon\" type=\"gold\" size=\"big\" />\n              {oldLang('TelegramStarsGift')}\n            </Button>\n          )}\n        </div>\n        <div className={styles.secondaryInfo}>\n          {tosText}\n        </div>\n        {shouldShowTransactions && (\n          <div className={styles.container}>\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMore}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  className={styles.transactions}\n                  noFastList\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <TransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n            <TabList\n              activeTab={selectedTabIndex}\n              tabs={TRANSACTION_TABS}\n              onSwitchTab={setSelectedTabIndex}\n            />\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const botId = modal?.originPayment?.botId;\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      starsBalanceState: global.stars,\n      originPaymentBot: bot,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(StarsBalanceModal));\n","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './transaction/PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['isStarPaymentModalOpen'];\n};\n\ntype StateProps = {\n  payment?: TabState['payment'];\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  payment,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closePaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const photo = payment?.invoice?.photo;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!payment?.invoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = lang('Stars.Intro.PurchasedText.Stars', payment.invoice.amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => !!media.duration);\n\n      const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? lang('Stars.Transfer.Videos', extendedMedia.length)\n          : lang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(lang, paidMediaChat!);\n      return lang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    return lang('Stars.Transfer.Info', [payment.invoice.title, botName, starsText]);\n  }, [payment?.invoice, bot, lang, paidMediaMessage, paidMediaChat]);\n\n  const handlePayment = useLastCallback(() => {\n    const price = payment?.invoice?.amount;\n    const balance = starsBalanceState?.balance;\n    if (price === undefined || balance === undefined) {\n      return;\n    }\n\n    if (price > balance) {\n      openStarsBalanceModal({\n        originPayment: payment,\n      });\n      return;\n    }\n\n    sendStarPaymentForm();\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closePaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance || 0} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : (\n          <>\n            <Avatar peer={bot} size=\"giant\" />\n            {photo && <Avatar className={styles.paymentPhoto} webPhoto={photo} size=\"giant\" />}\n          </>\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {lang('StarsConfirmPurchaseTitle')}\n      </h2>\n      <div className={buildClassName(styles.description, styles.smallerText)}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang('Stars.Transfer.Pay')}\n        <div className={styles.paymentAmount}>\n          {payment?.invoice?.amount}\n          <StarIcon className={styles.paymentButtonStar} size=\"small\" />\n        </div>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const payment = selectTabState(global).payment;\n    const bot = payment?.botId ? selectUser(global, payment.botId) : undefined;\n\n    const messageInputInvoice = payment.inputInvoice?.type === 'message' ? payment.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      payment,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"IzhfRIWu\",\"positive\":\"jvBZSrpd\",\"negative\":\"xDyq9cc0\",\"header\":\"qBOIq6Jn\",\"starsHeader\":\"VqKkGnpy\",\"amount\":\"sso9uZM6\",\"title\":\"ZZAj3hj7\",\"description\":\"NuWOY7ED\",\"tid\":\"tMF8VIOM\",\"footer\":\"KgzPpgS6\",\"starsBackground\":\"nML8IQqX\",\"mediaShift\":\"owKhvwqB\",\"copyIcon\":\"voCttFzS\",\"mediaPreview\":\"C5r59yiV\",\"starTitle\":\"KIlRQemn\",\"subtitle\":\"mFYcIYMJ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransactionPeer, ApiSticker, ApiUser,\n} from '../../../../api/types';\nimport type { TabState } from '../../../../global/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessageLink, getUserFullName } from '../../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../../global/helpers/payments';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectGiftStickerForStars,\n  selectPeer, selectUser,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../../util/clipboard';\nimport { formatDateTimeToString } from '../../../../util/dates/dateFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Icon from '../../../common/icons/Icon';\nimport StarIcon from '../../../common/icons/StarIcon';\nimport SafeLink from '../../../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../../common/TableInfoModal';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionModal.module.scss';\n\nimport StarsBackground from '../../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['starsTransactionModal'];\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  user?: ApiUser;\n  canPlayAnimatedEmojis?: boolean;\n  starGiftSticker?: ApiSticker;\n};\n\nconst StarsTransactionModal: FC<OwnProps & StateProps> = ({\n  modal, peer, user, canPlayAnimatedEmojis, starGiftSticker,\n}) => {\n  const { showNotification, openMediaViewer, closeStarsTransactionModal } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { transaction } = modal || {};\n  const isGift = transaction?.isGift;\n  const isPrizeStars = transaction?.isPrizeStars;\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = transaction?.extendedMedia;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const animatedStickerData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    return (\n      <AnimatedIconFromSticker\n        key={transaction.id}\n        sticker={starGiftSticker}\n        play={canPlayAnimatedEmojis}\n        noLoop\n        nonInteractive\n      />\n    );\n  }, [canPlayAnimatedEmojis, starGiftSticker, transaction]);\n\n  const giftEntryAboutText = useMemo(() => {\n    const subtitleText = oldLang('lng_credits_box_history_entry_gift_in_about');\n    const subtitleTextParts = subtitleText.split('{link}');\n\n    return (\n      <>\n        {subtitleTextParts[0]}\n        <SafeLink\n          url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n          text={oldLang('GiftStarsSubtitleLinkName')}\n        >\n          {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n        </SafeLink>\n        {subtitleTextParts[1]}\n      </>\n    );\n  }, [oldLang]);\n\n  const giftOutAboutText = useMemo(() => {\n    return lang(\n      'CreditsBoxHistoryEntryGiftOutAbout',\n      {\n        user: <strong>{user ? getUserFullName(user) : ''}</strong>,\n        link: (\n          <SafeLink\n            url={oldLang('lng_credits_box_history_entry_gift_about_url')}\n            text={oldLang('GiftStarsSubtitleLinkName')}\n          >\n            {renderText(oldLang('GiftStarsSubtitleLinkName'), ['simple_markdown'])}\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, user, oldLang]);\n\n  const starModalData = useMemo(() => {\n    if (!transaction) {\n      return undefined;\n    }\n\n    const customPeer = (transaction.peer && transaction.peer.type !== 'peer'\n        && buildStarsTransactionCustomPeer(transaction.peer)) || undefined;\n\n    const peerId = transaction.peer?.type === 'peer' ? transaction.peer.id : undefined;\n    const toName = transaction.peer && oldLang(getStarsPeerTitleKey(transaction.peer));\n\n    const title = transaction.title || (customPeer ? oldLang(customPeer.titleKey) : undefined);\n\n    const messageLink = peer && transaction.messageId\n      ? getMessageLink(peer, undefined, transaction.messageId) : undefined;\n\n    const media = transaction.extendedMedia;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? oldLang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? oldLang('Stars.Transfer.Videos', mediaAmount)\n        : oldLang('Media', mediaAmount);\n\n    const description = transaction.description || (media ? mediaText : undefined);\n\n    const header = (\n      <div className={buildClassName(styles.header, styles.starsHeader)}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        {(isGift || isPrizeStars) ? animatedStickerData : (\n          <img\n            className={buildClassName(styles.starsBackground, media && styles.mediaShift)}\n            src={StarsBackground}\n            alt=\"\"\n            draggable={false}\n          />\n        )}\n        {title && <h1 className={styles.title}>{title}</h1>}\n        {(isGift || isPrizeStars) && (\n          <h1 className={buildClassName(styles.title, styles.starTitle)}>\n            {isPrizeStars ? oldLang('StarsGiveawayPrizeReceived')\n              : transaction?.isMyGift ? oldLang('StarsGiftSent') : oldLang('StarsGiftReceived')}\n          </h1>\n        )}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span className={buildClassName(styles.amount, transaction.stars < 0 ? styles.negative : styles.positive)}>\n            {formatStarsTransactionAmount(transaction.stars)}\n          </span>\n          <StarIcon type=\"gold\" size=\"middle\" />\n        </p>\n        {isGift && (\n          <span className={styles.subtitle}>\n            {transaction?.isMyGift ? giftOutAboutText : giftEntryAboutText}\n          </span>\n        )}\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      oldLang(transaction.stars < 0 || transaction.isMyGift ? 'Stars.Transaction.To'\n        : peerId ? 'Star.Transaction.From' : 'Stars.Transaction.Via'),\n      peerId ? { chatId: peerId } : toName || '',\n    ]);\n\n    if (messageLink) {\n      tableData.push([oldLang('Stars.Transaction.Media'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    if (isPrizeStars) {\n      tableData.push(\n        [oldLang('BoostReason'), oldLang('Giveaway')],\n        [oldLang('Gift'), oldLang('Stars', transaction.stars, 'i')],\n      );\n    }\n\n    if (transaction.id && !isPrizeStars) {\n      tableData.push([\n        oldLang('Stars.Transaction.Id'),\n        (\n          <span\n            className={styles.tid}\n            onClick={() => {\n              copyTextToClipboard(transaction.id!);\n              showNotification({\n                message: oldLang('StarsTransactionIDCopied'),\n              });\n            }}\n          >\n            {transaction.id}\n            <Icon className={styles.copyIcon} name=\"copy\" />\n          </span>\n        ),\n      ]);\n    }\n\n    tableData.push([\n      oldLang('Stars.Transaction.Date'),\n      formatDateTimeToString(transaction.date * 1000, oldLang.code, true),\n    ]);\n\n    const footerText = oldLang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={oldLang('StarsTOSLink')} text={oldLang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n      avatarPeer: !transaction.photo ? (peer || customPeer) : undefined,\n    };\n  }, [\n    transaction, oldLang, peer, isGift, isPrizeStars, animatedStickerData, giftOutAboutText, giftEntryAboutText,\n  ]);\n\n  const prevModalData = usePreviousDeprecated(starModalData);\n  const renderingModalData = prevModalData || starModalData;\n\n  return (\n    <TableInfoModal\n      isOpen={Boolean(transaction)}\n      className={styles.modal}\n      header={renderingModalData?.header}\n      isGift={isGift}\n      isPrizeStars={isPrizeStars}\n      tableData={renderingModalData?.tableData}\n      footer={renderingModalData?.footer}\n      noHeaderImage={Boolean(transaction?.extendedMedia)}\n      headerAvatarWebPhoto={transaction?.photo}\n      headerAvatarPeer={renderingModalData?.avatarPeer}\n      buttonText={oldLang('OK')}\n      onClose={closeStarsTransactionModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const peerId = modal?.transaction?.peer?.type === 'peer' && modal.transaction.peer.id;\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n    const user = peerId ? selectUser(global, peerId) : undefined;\n\n    const starCount = modal?.transaction.stars;\n    const starGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    return {\n      peer,\n      user,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      starGiftSticker,\n    };\n  },\n)(StarsTransactionModal));\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={styles.topIcon}><Icon name={headerIconName} /></div>\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      <Separator className={styles.separator} />\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GsS8Jrki\",\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isMonetizationSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isMonetizationSharing,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, minLevelToRestrictAds]);\n\n  if (isMonetizationSharing && modalData) {\n    return (\n      <TableAboutModal\n        isOpen={isOpen}\n        listItemData={modalData.listItemData}\n        headerIconName=\"channel\"\n        header={modalData.header}\n        footer={modalData.footer}\n        buttonText={oldLang('RevenueSharingAdsUnderstood')}\n        onClose={onClose}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  chatId: string;\n  passwordHint?: string;\n  error?: string;\n  isLoading?: boolean;\n};\n\nconst VerificationMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  onClose,\n  passwordHint,\n  error,\n  isLoading,\n}) => {\n  const {\n    clearMonetizationInfo, loadMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    loadMonetizationRevenueWithdrawalUrl({\n      chatId,\n      currentPassword: password,\n      onSuccess: () => {\n        onClose();\n      },\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationInfo();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('EnterPassword')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('Password')}\n            error={error && lang(error)}\n            description={lang('Channel.OwnershipTransfer.EnterPasswordText')}\n            clearError={handleClearError}\n            isLoading={isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(VerificationMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSender, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportMessages,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const shouldShowOptions = shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={shouldShowOptions && styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {shouldShowOptions && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={shouldShowOptions ? styles.title : styles.singleTitle}>{lang('DeleteSingleMessagesTitle')}</h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActionsSlow(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal?.message && selectSender(global, deleteMessageModal.message);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && chat.id !== REPLIES_USER_ID && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"singleTitle\":\"jsg3ZpHm\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportMessages,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    const senderArray = getSendersFromSelectedMessages(getGlobal(), chat);\n    return senderArray?.filter(Boolean);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const shouldShowOptions = showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user?.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (!chat) return;\n\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner && shouldShowOptions) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        if (filteredMessageIdList?.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat.id, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOptions && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOptions && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOptions ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {shouldShowOptions && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    const usersById = getGlobal().users.byId;\n    return filterUsersByName(withoutRecent, usersById, searchQuery);\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.BotApps, title: 'AppsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header settings-picker-title\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {oldLang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {oldLang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {oldLang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {oldLang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {oldLang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {oldLang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {oldLang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {oldLang('Language')}\n          <span className=\"settings-item__current-value\">{oldLang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {oldLang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {oldLang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {oldLang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {oldLang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {oldLang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {oldLang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {oldLang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={oldLang('lng_settings_ask_ok')}\n        title={oldLang('AskAQuestion')}\n        text={oldLang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return lang('Loading');\n\n    const { visibility, shouldAllowPremium } = setting;\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'inline') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAdsClick?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n} from '../../../api/types';\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  onClose,\n  onCloseAnimationEnd,\n  canReplyInChat,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAdsClick: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAdsClick,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransitionDeprecated(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAdsClick();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openPremiumGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openPremiumGiftModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/pickers/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (foundIds?.length) {\n      if (searchType === 'chat') {\n        const [chatId, messageId] = parseSearchResultKey(foundIds[0]);\n        focusMessage({ chatId, messageId, threadId });\n      }\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [searchType, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => performMiddleSearch({ chatId, threadId, query }));\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PickerSelectedItem\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            fluid\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [focusedIndex + 1, totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n  message,\n  reactionsLimit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      return currentReactions.map(({ reaction }) => reaction);\n    }\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { IAnchorPosition } from '../../../../types';\nimport {\n  type ApiAvailableEffect,\n  type ApiMessage,\n  type ApiMessageEntity,\n  type ApiReaction,\n  type ApiReactionCustomEmoji,\n  type ApiSticker,\n  type ApiStory,\n  type ApiStorySkipped,\n  MAIN_THREAD_ID,\n} from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({ });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n  && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"drop-target\":\"LhhRTsy6\",\"dropTarget\":\"LhhRTsy6\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info mt-4\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiInvoice, ApiShippingAddress, ApiWebDocument } from '../../api/types';\nimport type { Price } from '../../types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  prices?: Price[];\n  shippingPrices: any;\n  tipAmount?: number;\n  totalAmount?: number;\n  currency?: string;\n  info?: {\n    shippingAddress?: ApiShippingAddress;\n    phone?: string;\n    name?: string;\n  };\n  photo?: ApiWebDocument;\n  text?: string;\n  title?: string;\n  credentialsTitle?: string;\n  shippingMethod?: string;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  prices,\n  shippingPrices,\n  tipAmount,\n  totalAmount,\n  currency,\n  info,\n  photo,\n  text,\n  title,\n  credentialsTitle,\n  shippingMethod,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice: ApiInvoice = useMemo(() => {\n    return {\n      mediaType: 'invoice',\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n    const {\n      currency,\n      prices,\n      info,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n      tipAmount,\n    } = (receipt || {});\n\n    return {\n      currency,\n      prices,\n      info,\n      tipAmount,\n      totalAmount,\n      credentialsTitle,\n      shippingPrices,\n      shippingMethod,\n      photo,\n      text,\n      title,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","undefined","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","memo","isOpen","profileId","onClose","onConfirm","deleteProfilePhoto","deleteChatPhoto","getActions","handleDeletePhoto","useCallback","isUserId","chatId","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReport","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","useLastCallback","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","e","stopPropagation","dir","isRectangular","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","sponsoredMessage","textMessage","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","date","formattedDate","formatMediaDateTime","count","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","currentItem","getMediaViewerItem","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","isFromMedia","isMedia","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","peerId","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","CalendarModal","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","resizeTimeout","webApps","activeWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","changeWebAppModalState","closeWebAppModal","oldLang","useLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","activeTabName","botName","renderTitle","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeBotId","isMaximizedState","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","webApp","registerSendEventCallback","registerReloadFrameCallback","isDragging","frameSize","isMultiTabSupported","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","mainButton","setMainButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerColor","serverHeaderColorKey","serverHeaderColor","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","activeWebAppKey","updateCurrentWebApp","updatedPartialWebApp","updatedWebApp","themeParams","extractCurrentThemeParams","bg_color","backgroundColor","frameRef","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","isBackButtonVisible","is_visible","isSettingsButtonVisible","validateHexColor","calculateHeaderColor","color_key","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","buttonId","button_id","handleAppPopupModalClose","serverColorKey","serverColor","newColor","updateHeaderColor","sendThemeCallback","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","handleAcceptWriteAccess","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","frameWidth","frameHeight","frameStyle","sandbox","allow","allowFullScreen","hasCloseButton","prolongWebView","openWebAppTab","maximizedStateSize","minimizedStateSize","getFrameSize","setFrameSize","getSize","openedOrderedKeys","sessionKeys","tabs","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","draggableStyle","dragHandleElementRef","originalSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartDrag","setElementPositionOnStartDrag","getDragStartPoint","setDragStartPoint","elementPositionOnStartDrag","dragStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","isWindowsResizing","startWindowResizing","stopWindowResizing","getVisibleArea","innerWidth","innerHeight","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","adjustSizeWithinBounds","handleDrag","cursorStyle","useDraggable","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleTabClose","handleToggleClick","handleBackClick","handleCollapseClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","viewBox","fill","useHorizontalScroll","dialogRef","dialogStyle","isLowStackPriority","shortName","renderActiveTab","anchor","MinimizedWebAppModal","noBackdropClose","WebAppModalTabContent","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closePremiumGiftModal","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","main","avatars","headerText","center","part","subpart","boostIcon","giftSection","subscriptionOptions","match","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","selectedStarOption","selectedStarCount","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","stars","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","winner","winners","opt","perUserStars","wideOption","optionTop","formatInteger","stackedStars","StarIcon","stackedStar","optionBottom","moreOptions","noForcedUpperCase","starsGiftOptions","forUserId","starsGiftModal","closeStarsGiftModal","selectedOption","setSelectedOption","bottomText","SafeLink","hiddenHeader","starHeaderText","headerInfo","logoBackground","StarsBackground","logo","StarLogo","formatCurrencyAsString","StarTopupOptionList","secondaryInfo","notFoundText","noScrollRestore","isViewOnly","itemClassName","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","ItemPicker","picker","confirmButtonText","shouldAdaptToSearch","withFixedHeight","modalProps","hasOnClickHandler","headerClassName","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","isLink","onClickAction","userNames","selectedMemberIds","displayText","chatFullInfo","selectChatFullInfo","members","adminMembersById","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredContactIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftsEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starOptions","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedStarsGift","userCountOptions","winnerCountOptions","quantity","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","boosts","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","CountryPickerModal","GiveawayUserPickerModal","GiveawayChannelPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openPremiumGiftModal","displayedUserIds","handleSendIdList","closeStarsGiftingModal","openStarsGiftModal","combinedIds","isSupport","SERVICE_NOTIFICATIONS_USER_ID","newSelectedId","onSelectedIdChange","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","unshift","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","tableData","headerImageUrl","headerAvatarPeer","headerAvatarWebPhoto","noHeaderImage","isPrizeStars","withAvatar","hasAbsoluteCloseButton","webPhoto","PickerSelectedItem","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","TableInfoModal","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","balance","smallerText","balanceBottom","SingleMediaThumb","boughtMedia","mediaBlob","blurry","full","isTransactionPreview","arr","MediaSpoiler","noOutline","transaction","openStarsTransactionModal","transactionPeer","selectOptionalPeer","avatarPeer","CUSTOM_PEER_PREMIUM","customPeer","buildStarsTransactionCustomPeer","titleKey","subtitleKey","isRefund","hasFailed","isPending","PaidMediaThumb","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS","originPayment","starsBalanceState","originPaymentBot","closeStarsBalanceModal","loadStarsTransactions","openStarsGiftingModal","history","selectedTabIndex","setSelectedTabIndex","productStarsPrice","invoice","originBotName","shouldShowTransactions","all","transactions","tosText","openStarsGiftingModalHandler","openStarsInfoModalHandler","BalanceBlock","modalBalance","starButton","renderCount","shouldRestoreHeight","noFastList","TransactionItem","TabList","activeTab","onSwitchTab","messageInputInvoice","inputInvoice","isPaidMedia","paidMediaMessage","paidMediaChat","closePaymentModal","openStarsBalanceModal","sendStarPaymentForm","markLoading","unmarkLoading","starsText","areAllPhotos","areAllVideos","mediaText","channelTitle","handlePayment","price","paymentContent","paymentImages","paymentPhoto","paymentImageBackground","paymentButton","paymentAmount","paymentButtonStar","starCount","starGiftSticker","selectGiftStickerForStars","canPlayAnimatedEmojis","closeStarsTransactionModal","handleOpenMedia","flatMap","animatedStickerData","AnimatedIconFromSticker","giftEntryAboutText","subtitleTextParts","giftOutAboutText","withNodes","starModalData","toName","getStarsPeerTitleKey","messageLink","getMessageLink","mediaAmount","m","isMyGift","copyTextToClipboard","footerTextParts","renderingModalData","listItemData","headerIconName","isStatic","Separator","isMonetizationSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","TableAboutModal","blockchainText","monetizationTitle","specialReplacement","passwordHint","clearMonetizationInfo","loadMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","onSuccess","handleClearError","PasswordForm","shouldShowSubmit","clearError","hint","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","isSuperGroup","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","REPLIES_USER_ID","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","deleteMessages","deleteScheduledMessages","reportMessages","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","shouldShowOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","selectSenderFromMessage","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","reason","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","singleTitle","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","PermissionCheckboxList","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","senderList","senderArray","getSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","prev","userIdList","isNaN","onCloseHandler","nestedCheckbox","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","handleCopy","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","handleOpenPremium","LOCAL_TGS_URLS","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","peerReactions","reactor","seenByUser","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","useSelectWithEnter","storyViewerOrigin","MuteChatModal","ChatFolderModal","popularBotApps","botApps","recentBotIds","topBotApps","searchPopularBotApps","openChatWithInfo","shouldShowMoreMine","setShouldShowMoreMine","filteredFoundIds","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","handleToggleShowMoreMine","LeftSearchResultChat","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","handleTopicClick","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","BotAppResults","INITIAL_STATE","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","lockedUnselectedIds","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","selectUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","shouldDisplayStars","sessionCount","openSupportChat","openPremiumGiftingModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","withIcon","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","useShowTransition","setIsMenuOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","handleReport","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","userFullInfo","canGiftPremium","premiumGifts","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","botInfo","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","isCustomPeer","avatarIcon","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","update","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","preloadBackwards","MiddleSearchResult","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","shouldUseCurrentReactions","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","personalPhoto","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","receipt","totalAmount","credentialsTitle","fullAddress","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek"],"sourceRoot":""}